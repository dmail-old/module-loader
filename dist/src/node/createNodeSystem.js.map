{
  "version": 3,
  "sources": [
    "../../../src/node/createNodeSystem.js"
  ],
  "names": [
    "createNodeSystem",
    "urlToFilename",
    "url",
    "nodeSystem",
    "global",
    "System",
    "constructor",
    "instantiate",
    "parent",
    "nodeBuiltinModuleExports",
    "require",
    "default",
    "then",
    "status",
    "reason",
    "headers",
    "body",
    "Promise",
    "reject",
    "filename",
    "script",
    "Script",
    "runInThisContext",
    "error",
    "code",
    "getRegister"
  ],
  "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEO,MAAMA,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,aAAa,GAAIC,GAAD,IAASA;AAA3B,CAAD,KAAsC;AACpE,QAAMC,UAAU,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,WAAlB,EAAnB;;AAEAH,EAAAA,UAAU,CAACI,WAAX,GAAyB,CAACL,GAAD,EAAMM,MAAN,KAAiB;AACxC,QAAI,8CAAoBN,GAApB,CAAJ,EAA8B;AAC5B,aAAO,oDAAuB,MAAM;AAClC,cAAMO,wBAAwB,GAAGC,OAAO,CAACR,GAAD,CAAxC,CADkC,CACY;;;AAC9C,iCACKO,wBADL;AAEEE,UAAAA,OAAO,EAAEF;AAFX;AAID,OANM,CAAP;AAOD;;AAED,WAAO,8BAAYP,GAAZ,EAAiBM,MAAjB,EAAyBI,IAAzB,CAA8B,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA;AAA3B,KAAD,KAAuC;AAC1E,UAAIH,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA9B,EAAmC;AACjC,eAAOI,OAAO,CAACC,MAAR,CAAe;AAAEL,UAAAA,MAAF;AAAUC,UAAAA,MAAV;AAAkBC,UAAAA,OAAlB;AAA2BC,UAAAA;AAA3B,SAAf,CAAP;AACD,OAHyE,CAK1E;AACA;AACA;;;AACA,YAAMG,QAAQ,GAAGlB,aAAa,CAACC,GAAD,CAA9B;AACA,YAAMkB,MAAM,GAAG,IAAIC,UAAJ,CAAWL,IAAX,EAAiB;AAAEG,QAAAA;AAAF,OAAjB,CAAf;;AACA,UAAI;AACFC,QAAAA,MAAM,CAACE,gBAAP;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACd,eAAON,OAAO,CAACC,MAAR,CAAe;AACpBM,UAAAA,IAAI,EAAE,0BADc;AAEpBD,UAAAA,KAFoB;AAGpBrB,UAAAA,GAHoB;AAIpBM,UAAAA;AAJoB,SAAf,CAAP;AAMD;;AAED,aAAOL,UAAU,CAACsB,WAAX,EAAP;AACD,KAtBM,CAAP;AAuBD,GAlCD;;AAoCA,SAAOtB,UAAP;AACD,CAxCM",
  "sourcesContent": [
    "import { isNodeBuiltinModule } from \"./isNodeBuiltinModule.js\"\nimport { Script } from \"vm\"\nimport { fetchModule } from \"./fetchModule.js\"\nimport \"systemjs/dist/system.js\"\nimport { getNamespaceToRegister } from \"../getNamespaceToRegister.js\"\n\nexport const createNodeSystem = ({ urlToFilename = (url) => url }) => {\n  const nodeSystem = new global.System.constructor()\n\n  nodeSystem.instantiate = (url, parent) => {\n    if (isNodeBuiltinModule(url)) {\n      return getNamespaceToRegister(() => {\n        const nodeBuiltinModuleExports = require(url) // eslint-disable-line import/no-dynamic-require\n        return {\n          ...nodeBuiltinModuleExports,\n          default: nodeBuiltinModuleExports,\n        }\n      })\n    }\n\n    return fetchModule(url, parent).then(({ status, reason, headers, body }) => {\n      if (status < 200 || status >= 300) {\n        return Promise.reject({ status, reason, headers, body })\n      }\n\n      // This filename is very important because it allows the engine (like vscode) to be know\n      // that the evluated file is in fact on the filesystem\n      // (very important for debugging and sourcenap resolution)\n      const filename = urlToFilename(url)\n      const script = new Script(body, { filename })\n      try {\n        script.runInThisContext()\n      } catch (error) {\n        return Promise.reject({\n          code: \"MODULE_INSTANTIATE_ERROR\",\n          error,\n          url,\n          parent,\n        })\n      }\n\n      return nodeSystem.getRegister()\n    })\n  }\n\n  return nodeSystem\n}\n"
  ]
}