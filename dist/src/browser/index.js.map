{
  "version": 3,
  "sources": [
    "../../../src/browser/index.js"
  ],
  "names": [
    "browserSystem",
    "window",
    "System",
    "constructor",
    "instantiate",
    "url",
    "parent",
    "then",
    "status",
    "headers",
    "reason",
    "body",
    "Promise",
    "reject",
    "eval",
    "error",
    "code",
    "getRegister",
    "default",
    "JSON",
    "parse"
  ],
  "mappings": ";;AAAA;;AACA;;AAEA,MAAMA,aAAa,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,WAAlB,EAAtB;;AAEAH,aAAa,CAACI,WAAd,GAA4B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC3C,SAAO,kCAAcD,GAAd,EAAmBE,IAAnB,CAAwB,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA;AAA3B,GAAD,KAAuC;AACpE,QAAIH,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA9B,EAAmC;AACjC,aAAOI,OAAO,CAACC,MAAR,CAAe;AAAEL,QAAAA,MAAF;AAAUE,QAAAA,MAAV;AAAkBD,QAAAA,OAAlB;AAA2BE,QAAAA;AAA3B,OAAf,CAAP;AACD;;AAED,QAAIF,OAAO,CAAC,cAAD,CAAP,KAA4B,wBAAhC,EAA0D;AACxDE,MAAAA,IAAI,GAAI,GAAEA,IAAK;EACnB,KAAM,cAAaN,GAAI,EADnB;;AAGA,UAAI;AACFJ,QAAAA,MAAM,CAACa,IAAP,CAAYH,IAAZ;AACD,OAFD,CAEE,OAAOI,KAAP,EAAc;AACd,eAAOH,OAAO,CAACC,MAAR,CAAe;AACpBG,UAAAA,IAAI,EAAE,0BADc;AAEpBD,UAAAA,KAFoB;AAGpBV,UAAAA,GAHoB;AAIpBC,UAAAA;AAJoB,SAAf,CAAP;AAMD;;AAED,aAAON,aAAa,CAACiB,WAAd,EAAP;AACD;;AAED,QAAIR,OAAO,CAAC,cAAD,CAAP,KAA4B,kBAAhC,EAAoD;AAClD,aAAO,oDAAuB,MAAM;AAClC,eAAO;AACLS,UAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWT,IAAX;AADJ,SAAP;AAGD,OAJM,CAAP;AAKD;AACF,GA9BM,CAAP;AA+BD,CAhCD;;AAkCAV,MAAM,CAACC,MAAP,GAAgBF,aAAhB",
  "sourcesContent": [
    "import { fetchUsingXHR } from \"./fetchUsingXHR.js\"\nimport { getNamespaceToRegister } from \"../getNamespaceToRegister.js\"\n\nconst browserSystem = new window.System.constructor()\n\nbrowserSystem.instantiate = (url, parent) => {\n  return fetchUsingXHR(url).then(({ status, headers, reason, body }) => {\n    if (status < 200 || status >= 400) {\n      return Promise.reject({ status, reason, headers, body })\n    }\n\n    if (headers[\"content-type\"] === \"application/javascript\") {\n      body = `${body}\n${\"//#\"} sourceURL=${url}`\n\n      try {\n        window.eval(body)\n      } catch (error) {\n        return Promise.reject({\n          code: \"MODULE_INSTANTIATE_ERROR\",\n          error,\n          url,\n          parent,\n        })\n      }\n\n      return browserSystem.getRegister()\n    }\n\n    if (headers[\"content-type\"] === \"application/json\") {\n      return getNamespaceToRegister(() => {\n        return {\n          default: JSON.parse(body),\n        }\n      })\n    }\n  })\n}\n\nwindow.System = browserSystem\n"
  ]
}